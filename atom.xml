<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Honey</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhanghuaxiao.github.io/"/>
  <updated>2019-01-25T14:42:58.424Z</updated>
  <id>https://zhanghuaxiao.github.io/</id>
  
  <author>
    <name>Honey</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack4.29.0基本用法</title>
    <link href="https://zhanghuaxiao.github.io/2019/01/25/webpack4-29-0/"/>
    <id>https://zhanghuaxiao.github.io/2019/01/25/webpack4-29-0/</id>
    <published>2019-01-25T09:11:32.000Z</published>
    <updated>2019-01-25T14:42:58.424Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>不积跬步无以至千里，不积小流无以成江海 </p></blockquote><p>从2009到2019社会在不断进步 技术也在不断进步 我们当然也不能落后<br><img style="width:400px;height:200px;margin-left:-11px;" class="full-image" src="/img/jy.png"><br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li><p>全局安装webpack和webpack-cli</p><blockquote><p>sudo npm install webpack -g<br>sudo npm install webpack-cli -g</p></blockquote></li><li><p>文件夹下局部安装</p><blockquote><p>npm init -y<br>sudo npm install webpack –save-dev<br>sudo npm install webpack-cli –save-dev</p></blockquote></li></ul><h2 id="实现对一个js文件打包"><a href="#实现对一个js文件打包" class="headerlink" title="实现对一个js文件打包"></a>实现对一个js文件打包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    mode:&apos;development&apos;,</span><br><span class="line">    entry:&apos;./app.js&apos;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&apos;[name].bundle.js&apos;,</span><br><span class="line">        path:path.join(__dirname,&apos;./dist&apos;),</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">这样就能在dist目录下出现一个app.bundle.js文件啦！</span><br></pre></td></tr></table></figure><h2 id="实现多个js文件打包"><a href="#实现多个js文件打包" class="headerlink" title="实现多个js文件打包"></a>实现多个js文件打包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const CleanWebpackPlugin = require(&apos;clean-webpack-plugin&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    mode: &apos;development&apos;,</span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: &apos;./src/index.js&apos;,</span><br><span class="line">        test: &apos;./src/test.js&apos;,</span><br><span class="line">        test1: &apos;./src/test1.js&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname,&apos;./dist/js&apos;),</span><br><span class="line">        filename:&apos;[name]-[hash].js&apos;,</span><br><span class="line">        pubicPath: &apos;http://cdn.con&apos; //请求时会自己加协议（location.protocol=&apos;http&apos;）和端口号(host=&apos;cdn.con&apos;)</span><br><span class="line">    &#125;，</span><br><span class="line">    plugins: [</span><br><span class="line">        new CleanWebpackPlugin ([&apos;./dist/js&apos;]) //清除之前打包的文件</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用模版实现每个js对应自己的html"><a href="#使用模版实现每个js对应自己的html" class="headerlink" title="使用模版实现每个js对应自己的html"></a>使用模版实现每个js对应自己的html</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">//webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;) //模版loader</span><br><span class="line">const CleanWebpackPlugin = require(&apos;clean-webpack-plugin&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    entry:&#123;</span><br><span class="line">        index:&apos;./src/index.js&apos;,</span><br><span class="line">        test:&apos;./src/test.js&apos;,</span><br><span class="line">        test1:&apos;./src/test1.js&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        path:path.join(__dirname,&apos;./dist/js&apos;),</span><br><span class="line">        filename:&apos;[name]-[hash].js&apos;,</span><br><span class="line">        publicPath:&quot;http://cdn.com&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            title: &apos;this a index.html&apos;, //每个html 的title</span><br><span class="line">            template:&apos;hello.html&apos;,</span><br><span class="line">            filename:&apos;index.html&apos;,</span><br><span class="line">            excludeChunks:[&apos;test&apos;,&apos;test1&apos;] //排除名为test.js,test1.js打包的js文件</span><br><span class="line">        &#125;),</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            title:&apos;this a test.js&apos;,</span><br><span class="line">            template:&apos;hello.html&apos;,</span><br><span class="line">            filename:&apos;test.html&apos;,</span><br><span class="line">            excludeChunks:[&apos;index&apos;,&apos;test1&apos;]</span><br><span class="line">        &#125;),</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            title:&apos;this a test1.js&apos;,</span><br><span class="line">            template:&apos;hello.html&apos;,</span><br><span class="line">            filename:&apos;test1.html&apos;,</span><br><span class="line">            excludeChunks:[&apos;test&apos;,&apos;index&apos;]       </span><br><span class="line">        &#125;),</span><br><span class="line">        new CleanWebpackPlugin([&apos;./dist/js&apos;])</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//hello.html 模版内容</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;%= htmlWebpackPlugin.options.title%&gt;&lt;/title&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    &lt;%=</span><br><span class="line">    compilation.assets[htmlWebpackPlugin.files.chunks.test1.entry.substr</span><br><span class="line">    (htmlWebpackPlugin.files.publicPath.length)].source() %&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;% for(let k in htmlWebpackPlugin.files.chunks) &#123;%&gt;</span><br><span class="line">        &lt;% if(k != &apos;index&apos;) &#123;%&gt;</span><br><span class="line">            &lt;script src=&quot;&lt;%=htmlWebpackPlugin.files.chunks[k].entry %&gt;&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;% &#125;%&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="使用file-loader-css-loader-style-loader-postcss-loader"><a href="#使用file-loader-css-loader-style-loader-postcss-loader" class="headerlink" title="使用file-loader|css-loader|style-loader|postcss-loader"></a>使用file-loader|css-loader|style-loader|postcss-loader</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//webpack.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">mode: &apos;development&apos;,</span><br><span class="line">entry: &apos;./app.js&apos;,</span><br><span class="line">output: &#123;</span><br><span class="line">    filename: &apos;[name].bundle.js&apos;,</span><br><span class="line">    path: path.join(__dirname, &apos;./dist/js1&apos;),</span><br><span class="line">&#125;,</span><br><span class="line">plugins: [</span><br><span class="line">    new CleanWebpackPlugin([&apos;./dist/js1&apos;]),</span><br><span class="line">    require(&apos;autoprefixer&apos;)</span><br><span class="line">],</span><br><span class="line">module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: /\.(le|c)ss$/,</span><br><span class="line">        test: /\.(png|jpg|gif)$/,</span><br><span class="line">        use: [</span><br><span class="line">        &#123; loader: &quot;style-loader&quot; &#125;,</span><br><span class="line">        &#123; loader: &quot;css-loader&quot; &#125;,</span><br><span class="line">        &#123; loader: &apos;file-loader&apos;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            loader: &quot;postcss-loader&quot;,</span><br><span class="line">            options: &#123;</span><br><span class="line">            plugins: [</span><br><span class="line">                require(&quot;autoprefixer&quot;) /*在这里添加*/,</span><br><span class="line">            ],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line"> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;不积跬步无以至千里，不积小流无以成江海 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从2009到2019社会在不断进步 技术也在不断进步 我们当然也不能落后&lt;br&gt;&lt;img style=&quot;width:400px;height:200px;margin-left:-11px;&quot; class=&quot;full-image&quot; src=&quot;/img/jy.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
      <category term="webpack4+" scheme="https://zhanghuaxiao.github.io/tags/webpack4/"/>
    
  </entry>
  
  <entry>
    <title>使用github和hexo搭建个人博客</title>
    <link href="https://zhanghuaxiao.github.io/2019/01/24/posts/"/>
    <id>https://zhanghuaxiao.github.io/2019/01/24/posts/</id>
    <published>2019-01-24T06:16:00.000Z</published>
    <updated>2019-01-24T15:50:26.961Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>所谓博客，都是孤芳自赏 </p></blockquote><p>现在越来越多的人喜欢利用Github搭建静态网站，原因不外乎简单省钱。本人也利用hexo+github搭建了本博客，用于分享一些心得。在此过程中，折腾博客的各种配置以及功能占具了我一部分时间，在此详细记录下我是如何利用hexo+github搭建静态博客以及一些配置相关问题，以免过后遗忘，且当备份之用。<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载node.js并安装（官网下载安装），默认会安装npm。</li><li>下载安装git（官网下载安装）</li><li>下载安装hexo。方法：打开cmd 运行npm install -g hexo</li></ul><h2 id="本地搭建hexo静态博客"><a href="#本地搭建hexo静态博客" class="headerlink" title="本地搭建hexo静态博客"></a>本地搭建hexo静态博客</h2><ul><li>新建一个文件夹，如MyBlog</li><li>进入该文件夹内，右击运行git，输入：hexo init（生成hexo模板，可能要翻墙）</li><li>生成完模板，运行npm install（目前貌似不用运行这一步）</li><li>最后运行：hexo server （运行程序，访问本地+localhost:4000可以看到博客已经搭建成功）</li></ul><h2 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h2><ul><li>在MyBlog下安装 <strong>npm install –save hexo-deployer-git</strong></li><li><p>找到_config.yml文件修改一下文件</p><blockquote><p>deploy:<br>type: git<br>repo: <a href="https://github.com/Zhanghuaxiao/Zhanghuaxiao.github.io.git" target="_blank" rel="noopener">https://github.com/Zhanghuaxiao/Zhanghuaxiao.github.io.git</a><br>branch: master</p></blockquote><p><img style="width:600px;height:200px" src="/img/urlimg.png" class="full-image"></p></li><li>最后运行 hexo clean(清除) hexo g(生成) hexo d(部署)</li><li>点击查看效果: <a href="https://zhanghuaxiao.github.io/">https://zhanghuaxiao.github.io/</a><br><img style="width:600px;height:200px" src="/img/github-pages.png" class="full-image"></li></ul><h2 id="使用nexT主题"><a href="#使用nexT主题" class="headerlink" title="使用nexT主题"></a>使用nexT主题</h2><ul><li><blockquote><p>安装 git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next </p></blockquote></li><li>修改_config.yml文件中 <strong>theme:next</strong></li><li>运行hexo clean  hexo s</li></ul><h2 id="hexo和nexT中文网"><a href="#hexo和nexT中文网" class="headerlink" title="hexo和nexT中文网"></a>hexo和nexT中文网</h2><blockquote><p>hexo中文网 <a href="https://hexo.io/zh-cn/docs/helpers" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/helpers</a><br>nexT中文官网 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></p></blockquote><h2 id="nexT主题参考文章"><a href="#nexT主题参考文章" class="headerlink" title="nexT主题参考文章"></a>nexT主题参考文章</h2><blockquote><p>对nexT主题设置:<a href="https://segmentfault.com/a/1190000009544924#articleHeader2" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009544924#articleHeader2</a><br>seo优化:<a href="https://www.jianshu.com/p/86557c34b671" target="_blank" rel="noopener">https://www.jianshu.com/p/86557c34b671</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;所谓博客，都是孤芳自赏 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在越来越多的人喜欢利用Github搭建静态网站，原因不外乎简单省钱。本人也利用hexo+github搭建了本博客，用于分享一些心得。在此过程中，折腾博客的各种配置以及功能占具了我一部分时间，在此详细记录下我是如何利用hexo+github搭建静态博客以及一些配置相关问题，以免过后遗忘，且当备份之用。&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
      <category term="hexo" scheme="https://zhanghuaxiao.github.io/tags/hexo/"/>
    
      <category term="nexT" scheme="https://zhanghuaxiao.github.io/tags/nexT/"/>
    
      <category term="搭建自己博客" scheme="https://zhanghuaxiao.github.io/tags/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
